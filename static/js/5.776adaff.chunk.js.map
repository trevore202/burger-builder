{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingOutput","map","ing","style","textTransform","display","margin","border","padding","className","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","ord","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6LA8BeA,EA3BD,SAAAC,GACV,IAAIC,EAAc,GAElB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAYL,EAAYM,KAC1B,SAAAC,GACI,OAAO,uBAAMC,MAAQ,CAACC,cAAc,aAAcC,QAAS,eAAgBC,OAAQ,QAASC,OAAQ,iBAAkBC,QAAQ,OAAvH,UACUN,EAAIJ,KADd,KACsBI,EAAIH,OAD1B,MACDG,EAAIJ,SAIlB,OACI,sBAAKW,UAAU,QAAf,UACI,8CAAiBT,KACjB,wCAAU,uCAAUN,EAAMgB,MAAMC,QAAQ,a,gCCjB9CC,E,uKAEF,WACIC,KAAKnB,MAAMoB,cAAcD,KAAKnB,MAAMqB,MAAOF,KAAKnB,MAAMsB,U,oBAG1D,WACI,IAAIC,EAAS,cAACC,EAAA,EAAD,IAWb,OAVKL,KAAKnB,MAAMyB,UACZF,EAASJ,KAAKnB,MAAMuB,OAAOhB,KAAK,SAAAR,GAC5B,OACI,cAAC,EAAD,CAEAE,YAAaF,EAAME,YACnBe,OAAQjB,EAAMiB,OAFTjB,EAAM2B,QAOnB,8BACKH,Q,GApBII,aAyCNC,uBAfS,SAAAC,GACpB,MAAM,CACFN,OAAQM,EAAMC,IAAIP,OAClBE,QAASI,EAAMC,IAAIL,QACnBJ,MAAOQ,EAAME,KAAKV,MAClBC,OAAQO,EAAME,KAAKT,WAIA,SAAAU,GACvB,MAAO,CACHZ,cAAe,SAACC,EAAOC,GAAR,OAAmBU,EAASC,IAAoBZ,EAAOC,QAI/DM,CAA6CM,YAAiBhB,EAAQiB,O","file":"static/js/5.776adaff.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Order.css'\r\n\r\nconst order = props => {\r\n    let ingredients = []\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        )\r\n    }\r\n\r\n    const ingOutput = ingredients.map(\r\n        ing => {\r\n            return <span style ={{textTransform:'capitalize', display: 'inline-block', margin: '0 8px', border: '1px solid #ccc', padding:'5px'}}\r\n             key={ing.name}>{ing.name} ({ing.amount})</span>\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className='Order'>\r\n            <p>Ingredients: {ingOutput}</p>\r\n            <p>Price: <strong>${props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId)\r\n    }\r\n\r\n    render(){\r\n        let orders = <Spinner />\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map( order =>{\r\n                return (\r\n                    <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={+order.price} />) //the + converts it from string to number\r\n            })\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        orders: state.ord.orders,\r\n        loading: state.ord.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios))"],"sourceRoot":""}